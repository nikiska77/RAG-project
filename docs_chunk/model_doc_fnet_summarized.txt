The FNet model was proposed in FNet: Mixing Tokens with Fourier Transforms by James Lee-Thorp, Joshua Ainslie, Ilya Eckstein, Santiago Ontanon. The model replaces the self-attention layer in a BERTmodel with a fourier transform which returns only the real parts of the transform. It is significantly faster than the BERT model because it has fewer parameters and is more memory efficient. It achieves about 92-97% of the accuracy of BERT counterparts on the GLUE benchmark. It trains 80% faster on GPUs and 70%. faster on TPUs at standard 512 input lengths. It has a light memory footprint and is particularly efficient at smaller model sizes. For a fixed speed and accuracy budget, small FNet modelsoutperform Transformer counterparts. It was trained without an attention mask as it is based on Fourier Transform. The original code can be found here. The abstract from the paper is the following:We show that Transformer encoder architectures can be sped up, with limited accuracy costs, by replacing the                self-att attention sublayers with simple linear transformations that "mix" input tokens. These linear mixers, along with nonlinearities in feed-forward layers, prove competent at modeling semantic relationships in several text classification tasks.