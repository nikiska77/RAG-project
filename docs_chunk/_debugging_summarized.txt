When training or inferencing with DistributedDataParallel and multiple GPU, if you run into issue of inter-communication between processes and/or nodes, you can use the following script to diagnose network issues. This will dump a lot of NCCL-related debug information, which you can then search online if you find that some problems are reported. For example to test how 2 GPUs interact do: python -m torch.distributed.run --nproc_per_node 2 --nnodes 1 torch-distributed-gpu-test.py. If both processes can talk to each and allocate GPU memory each will print an OK status. For more GPUs or nodes adjust the arguments in the script. You will find a lot more details inside the diagnostics script and even a recipe to how you could run it in a SLURM environment. If you're not sure how to interpret the output you can share the log file in an Issue. It is currently available for PyTorch-only. This feature can be used with any nn.Module-based model. It requires DDP (torch.distribution.launch) for multi-GPU training. It can also be used to detect underflow and overflow in a training loop.