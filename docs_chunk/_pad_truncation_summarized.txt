Padding and truncation create rectangular tensors from batches of varying lengths. Padding adds a special padding token to ensure shorter sequences will have the same length as either the longest sequence in a batch or the maximum length accepted by the model. Truncation works in the other direction by truncating long sequences. The API supports more strategies if you need them. The three arguments you need to are: padding, truncation and max_length. The padding argument controls padding. It can be a boolean or a string. The truncation argument controls truncation. This will only truncate the second sentence of a pair if a pair of sequences (or a batch of pairs of sequences) is provided. This is the default behavior, but it can be overridden. The max_ length argument controls the length a model can accept. It is a string and can be used to specify a maximum length or a maximum number of tokens to be truncated. The default behavior is to truncate a single sequence to the max length specified by themax_length argument. This works in most cases, but there are a number of ways to get around this, including using the 'only_first' and 'do_not_pad' arguments. The full API is available on GitHub.